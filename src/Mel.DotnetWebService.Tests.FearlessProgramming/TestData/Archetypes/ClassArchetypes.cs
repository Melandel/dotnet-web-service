using Mel.DotnetWebService.CrossCuttingConcerns.ConstrainedTypes;
using Mel.DotnetWebService.CrossCuttingConcerns.ConstrainedTypes.Guids;

namespace Mel.DotnetWebService.Tests.FearlessProgramming.TestData.Archetypes;

static class ClassArchetype
{
	public record PositionalRecordContainingAGuid(string FirstProperty, Guid SecondProperty);
	public record PositionalRecordContainingANonEmptyGuid(string FirstProperty, NonEmptyGuid SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingANonEmptyGuid(string FirstProperty, PositionalRecordContainingANonEmptyGuid SecondPropertyContainingANonEmptyGuid);
	public record PositionalRecordContainingAnArrayOfNonEmptyGuids(string FirstProperty, NonEmptyGuid[] SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnArrayOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAnArrayOfNonEmptyGuids SecondPropertyContainingAnArrayOfNonEmptyGuids);
	public record PositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAnArrayOfNonEmptyGuids[] SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuids SecondProperty);
	public record PositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuids(string FirstProperty, List<PositionalRecordContainingAnArrayOfNonEmptyGuids> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuids SecondProperty);
	public record PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuids(string FirstProperty, IEnumerable<PositionalRecordContainingAnArrayOfNonEmptyGuids> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuids SecondProperty);
	public record PositionalRecordContainingAListOfNonEmptyGuids(string FirstProperty, List<NonEmptyGuid> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAListOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAListOfNonEmptyGuids SecondPropertyContainingAListOfNonEmptyGuids);
	public record PositionalRecordContainingAnIEnumerableOfNonEmptyGuids(string FirstProperty, IEnumerable<NonEmptyGuid> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnIEnumerableOfNonEmptyGuids(string FirstProperty, PositionalRecordContainingAnIEnumerableOfNonEmptyGuids SecondPropertyContainingAnIEnumerableOfNonEmptyGuids);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidValues(string FirstProperty, Dictionary<string, NonEmptyGuid> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidValues(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidValues SecondPropertyContainingADictionaryWithNonEmptyGuidValues);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidKeys(string FirstProperty, Dictionary<NonEmptyGuid, string> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidKeys(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidKeys SecondPropertyContainingADictionaryWithNonEmptyGuidKeys);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidKeysAndValues(string FirstProperty, Dictionary<NonEmptyGuid, NonEmptyGuid> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidKeysAndValues(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidKeysAndValues SecondPropertyContainingADictionaryWithNonEmptyGuidKeysAndValues);

	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidValues(string FirstProperty, Dictionary<string, PositionalRecordContainingAnArrayOfNonEmptyGuids> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidValues(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidValues SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidValues(string FirstProperty, Dictionary<string, PositionalRecordContainingAListOfNonEmptyGuids> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidValues(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidValues SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidValues(string FirstProperty, Dictionary<string, PositionalRecordContainingAnIEnumerableOfNonEmptyGuids> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidValues(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidValues SecondProperty);

	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidKeys(string FirstProperty, Dictionary<PositionalRecordContainingAnArrayOfNonEmptyGuids, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidKeys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidKeys SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidKeys(string FirstProperty, Dictionary<PositionalRecordContainingAListOfNonEmptyGuids, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidKeys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidKeys SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidKeys(string FirstProperty, Dictionary<PositionalRecordContainingAnIEnumerableOfNonEmptyGuids, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidKeys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidKeys SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidKeys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidKeys SecondProperty);

	public record PositionalRecordContainingAPositionalRecordContainingAPositionalRecordContainingANonEmptyGuid(string FirstProperty, PositionalRecordContainingAPositionalRecordContainingANonEmptyGuid SecondProperty);
	public record PositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuid(string FirstProperty, PositionalRecordContainingANonEmptyGuid[] SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuid(string FirstProperty, PositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuid SecondProperty);
	public record PositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuid(string FirstProperty, List<PositionalRecordContainingANonEmptyGuid> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuid(string FirstProperty, PositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuid SecondProperty);
	public record PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuid(string FirstProperty, IEnumerable<PositionalRecordContainingANonEmptyGuid> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuid(string FirstProperty, PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuid SecondProperty);

	public record PositionalRecordContainingAPositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2 SecondPropertyContainingANonEmptyGuidStartingWithTheCharacter2);
	public record PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, NonEmptyGuidStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, NonEmptyGuidStartingWithTheCharacter2[] SecondProperty);
	public record PositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2[] SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, List<PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, IEnumerable<PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2s(string FirstProperty, PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2 SecondPropertyContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2);
	public record PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, List<NonEmptyGuidStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter2 SecondPropertyContainingAListOfNonEmptyGuidsStartingWithTheCharacter2);
	public record PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, IEnumerable<NonEmptyGuidStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter2 SecondPropertyContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter2);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, Dictionary<string, NonEmptyGuidStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Values SecondPropertyContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Values);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, Dictionary<NonEmptyGuidStartingWithTheCharacter2, string> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Keys SecondPropertyContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2Keys);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2KeysAndValues(string FirstProperty, Dictionary<NonEmptyGuidStartingWithTheCharacter2, NonEmptyGuidStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2KeysAndValues(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2KeysAndValues SecondPropertyContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter2KeysAndValues);
	public record PositionalRecordContainingAPositionalRecordContainingAPositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAPositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2[] SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, List<PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2 SecondProperty);
	public record PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, IEnumerable<PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2(string FirstProperty, PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter2 SecondProperty);

	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, Dictionary<string, PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Values SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, Dictionary<string, PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter2Values SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, Dictionary<string, PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter2> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Values(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Values SecondProperty);

	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, Dictionary<PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter2, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Keys SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, Dictionary<PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter2, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter2Keys SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, Dictionary<PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter2, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Keys SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter2Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter2Keys SecondProperty);


	public record PositionalRecordContainingAPositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3 SecondPropertyContainingANonEmptyGuidStartingWithTheCharacter3);
	public record PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, NonEmptyGuidStartingWithTheCharacter3 SecondProperty);
	public record PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, NonEmptyGuidStartingWithTheCharacter3[] SecondProperty);
	public record PositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3[] SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAnArrayOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3 SecondProperty);
	public record PositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, List<PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAListOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3 SecondProperty);
	public record PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, IEnumerable<PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3 SecondPropertyContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3);
	public record PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, List<NonEmptyGuidStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter3 SecondPropertyContainingAListOfNonEmptyGuidsStartingWithTheCharacter3);
	public record PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, IEnumerable<NonEmptyGuidStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter3 SecondPropertyContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter3);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, Dictionary<string, NonEmptyGuidStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Values SecondPropertyContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Values);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, Dictionary<NonEmptyGuidStartingWithTheCharacter3, string> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Keys SecondPropertyContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3Keys);
	public record PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3KeysAndValues(string FirstProperty, Dictionary<NonEmptyGuidStartingWithTheCharacter3, NonEmptyGuidStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3KeysAndValues(string FirstProperty, PositionalRecordContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3KeysAndValues SecondPropertyContainingADictionaryWithNonEmptyGuidStartingWithTheCharacter3KeysAndValues);
	public record PositionalRecordContainingAPositionalRecordContainingAPositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAPositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3 SecondProperty);
	public record PositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3[] SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAnArrayOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3 SecondProperty);
	public record PositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, List<PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAListOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3 SecondProperty);
	public record PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, IEnumerable<PositionalRecordContainingANonEmptyGuidStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingAPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3(string FirstProperty, PositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingANonEmptyGuidStartingWithTheCharacter3 SecondProperty);

	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, Dictionary<string, PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Values SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, Dictionary<string, PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter3Values SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, Dictionary<string, PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter3> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Values(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Values SecondProperty);

	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, Dictionary<PositionalRecordContainingAnArrayOfNonEmptyGuidsStartingWithTheCharacter3, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Keys SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, Dictionary<PositionalRecordContainingAListOfNonEmptyGuidsStartingWithTheCharacter3, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAListOfNonEmptyGuidStartingWithTheCharacter3Keys SecondProperty);
	public record PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, Dictionary<PositionalRecordContainingAnIEnumerableOfNonEmptyGuidsStartingWithTheCharacter3, string> SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Keys SecondProperty);
	public record PositionalRecordContainingPositionalRecordContainingAnIEnumerableOfPositionalRecordsContainingAnArrayOfNonEmptyGuidStartingWithTheCharacter3Keys(string FirstProperty, PositionalRecordContainingADictionaryWithPositionalRecordsContainingAnIEnumerableOfNonEmptyGuidStartingWithTheCharacter3Keys SecondProperty);

	public class NonEmptyGuidStartingWithTheCharacter2 : NonEmptyGuid
	{
		NonEmptyGuidStartingWithTheCharacter2(NonEmptyGuid value) : base(value)
		{
			if (!Value.ToString().StartsWith('2'))
			{
				throw ObjectConstructionException.WhenConstructingAMemberFor<NonEmptyGuidStartingWithTheCharacter2>(nameof(Value), Value, "@member must start with the character '2'");
			}
		}

		public static new NonEmptyGuidStartingWithTheCharacter2 FromString(string guidString)
		{
			try { return new(NonEmptyGuid.FromString(guidString)); }
			catch (ObjectConstructionException objectConstructionException) {       objectConstructionException.EnrichConstructionFailureContextWith<NonEmptyGuidStartingWithTheCharacter2>(guidString); throw; }
			catch (Exception defect)                                        { throw ObjectConstructionException.WhenConstructingAnInstanceOf<NonEmptyGuidStartingWithTheCharacter2>(defect, guidString); }
		}
	}
	public class NonEmptyGuidStartingWithTheCharacter3 : Constrained<NonEmptyGuid>
	{
		NonEmptyGuidStartingWithTheCharacter3(NonEmptyGuid value) : base(value)
		{
			if (!Value.ToString().StartsWith('3'))
			{
				throw ObjectConstructionException.WhenConstructingAMemberFor<NonEmptyGuidStartingWithTheCharacter3>(nameof(Value), Value, "@member must start with the character '3'");
			}
		}

		public static NonEmptyGuidStartingWithTheCharacter3 FromString(string guidString)
		{
			try { return new(NonEmptyGuid.FromString(guidString)); }
			catch (ObjectConstructionException objectConstructionException) { objectConstructionException.EnrichConstructionFailureContextWith<NonEmptyGuidStartingWithTheCharacter3>(guidString); throw; }
			catch (Exception defect) { throw ObjectConstructionException.WhenConstructingAnInstanceOf<NonEmptyGuidStartingWithTheCharacter3>(defect, guidString); }
		}
	}

	public class NonEmptyGuidStartingWithTheCharacter1 : Constrained<NonEmptyGuid>
	{
		NonEmptyGuidStartingWithTheCharacter1(NonEmptyGuid encapsulated) : base(encapsulated)
		{
			if (!Value.ToString().StartsWith('1'))
			{
				throw ObjectConstructionException.WhenConstructingAMemberFor<NonEmptyGuidStartingWithTheCharacter1>(nameof(Value), Value, "@member must start with the character '1'");
			}
		}

		public static NonEmptyGuidStartingWithTheCharacter1 FromString(string guidString)
		{
			try { return new(NonEmptyGuid.FromString(guidString)); }
			catch (ObjectConstructionException objectConstructionException) {       objectConstructionException.EnrichConstructionFailureContextWith<NonEmptyGuidStartingWithTheCharacter1>(guidString); throw; }
			catch (Exception defect)                                        { throw ObjectConstructionException.WhenConstructingAnInstanceOf<NonEmptyGuidStartingWithTheCharacter1>(defect, guidString); }
		}
	}

	public class NonEmptyGuids : Constrained<NonEmptyGuid[]>
	{
		NonEmptyGuids(NonEmptyGuid[] value) : base(value)
		{ }
		public static NonEmptyGuids FromStrings(params string[] strings)
		{
			try
			{
				return new(strings.Select(str => NonEmptyGuid.FromGuid(Guid.Parse(str))).ToArray());
			}
			catch (ObjectConstructionException objectConstructionException)
			{
				objectConstructionException.EnrichConstructionFailureContextWith<NonEmptyGuids>(strings);
				throw;
			}
			catch (Exception developerMistake)
			{
				throw ObjectConstructionException.WhenConstructingAnInstanceOf<NonEmptyGuids>(developerMistake, strings);
			}
		}
	}
	public class ValueObjectFeaturingNonEmptyGuidCollects
	{
		readonly NonEmptyGuids _nonEmptyGuids;
		readonly NonEmptyGuids[] _nonEmptyGuidss;
		ValueObjectFeaturingNonEmptyGuidCollects(NonEmptyGuids nonEmptyGuids, NonEmptyGuids[] nonEmptyGuidss)
		{
			_nonEmptyGuids = nonEmptyGuids;
			_nonEmptyGuidss = nonEmptyGuidss;
		}
		public static ValueObjectFeaturingNonEmptyGuidCollects From(string[] nonEmptyGuids, string[][] multipleSetsOfNonEmptyGuids)
		{
			try
			{
				return new(
					NonEmptyGuids.FromStrings(nonEmptyGuids),
					multipleSetsOfNonEmptyGuids.Select(array => NonEmptyGuids.FromStrings(array)).ToArray());
			}
			catch (ObjectConstructionException objectConstructionException)
			{
				objectConstructionException.EnrichConstructionFailureContextWith<ValueObjectFeaturingNonEmptyGuidCollects>(nonEmptyGuids, multipleSetsOfNonEmptyGuids);
				throw;
			}
			catch (Exception developerMistake)
			{
				throw ObjectConstructionException.WhenConstructingAnInstanceOf<ValueObjectFeaturingNonEmptyGuidCollects>(developerMistake, nonEmptyGuids, multipleSetsOfNonEmptyGuids);
			}
		}
	}
	public class NonEmptyGuidsWithPublicProperty : Constrained<NonEmptyGuid[]>
	{
		public int PublicProperty => Value.Length;
		NonEmptyGuidsWithPublicProperty(NonEmptyGuid[] value) : base(value)
		{
		}

		public static NonEmptyGuidsWithPublicProperty FromStrings(params string[] strings)
		{
			try
			{
				return new(strings.Select(guid => NonEmptyGuid.FromGuid(Guid.Parse(guid))).ToArray());
			}
			catch (ObjectConstructionException objectConstructionException)
			{
				objectConstructionException.EnrichConstructionFailureContextWith<NonEmptyGuidsWithPublicProperty>(strings);
				throw;
			}
			catch (Exception developerMistake)
			{
				throw ObjectConstructionException.WhenConstructingAnInstanceOf<NonEmptyGuidsWithPublicProperty>(developerMistake, strings);
			}
		}
	}
}
